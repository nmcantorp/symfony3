# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    app.event_listener.time_access_client_listener:
        class: AppBundle\EventListener\TimeAccessClientListener
        arguments:
            - '@logger'
            - '%timeaccess%'
        tags:
            - {name: kernel.event_listener, event: kernel.controller, method: onKernelController }
            - {name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    app.model_entity.airline:
        class: AppBundle\Model\Entity\Airline
        arguments: ["Lan Airlines", "500"]
        public: true

    app.event_listener.investor_listener:
        class: AppBundle\EventListener\InvestorListener
        arguments:
            - '@request_stack'
        tags:
            - {name: kernel.event_listener, event: investor.event, method: onUpCost}

    app.event_listener.time_elapsed_listener:
        class: AppBundle\EventListener\TimeElapsedListener
        arguments: ['@logger']
        tags:
            - {name: kernel.event_listener, event: kernel.controller, method: onKernelController}
            - {name: kernel.event_listener, event: kernel.response, method: onKernelResponse }